// Code generated by MockGen. DO NOT EDIT.
// Source: utils/logger.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockiWriter is a mock of iWriter interface
type MockiWriter struct {
	ctrl     *gomock.Controller
	recorder *MockiWriterMockRecorder
}

// MockiWriterMockRecorder is the mock recorder for MockiWriter
type MockiWriterMockRecorder struct {
	mock *MockiWriter
}

// NewMockiWriter creates a new mock instance
func NewMockiWriter(ctrl *gomock.Controller) *MockiWriter {
	mock := &MockiWriter{ctrl: ctrl}
	mock.recorder = &MockiWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockiWriter) EXPECT() *MockiWriterMockRecorder {
	return m.recorder
}

// Printf mocks base method
func (m *MockiWriter) Printf(format string, v ...interface{}) {
	varargs := []interface{}{format}
	for _, a := range v {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Printf", varargs...)
}

// Printf indicates an expected call of Printf
func (mr *MockiWriterMockRecorder) Printf(format interface{}, v ...interface{}) *gomock.Call {
	varargs := append([]interface{}{format}, v...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Printf", reflect.TypeOf((*MockiWriter)(nil).Printf), varargs...)
}
